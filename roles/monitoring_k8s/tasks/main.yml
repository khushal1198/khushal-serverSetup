---
# Ensure python3-pip is installed
- name: Ensure python3-pip is installed
  become: yes
  apt:
    name: python3-pip
    state: present
    update_cache: yes

# Ensure python3-kubernetes is installed
- name: Ensure python3-kubernetes is installed
  become: yes
  apt:
    name: python3-kubernetes
    state: present
    update_cache: yes

# Add Prometheus Helm repository
- name: Add Prometheus Helm repo
  community.kubernetes.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/k3s.yaml"

# Create monitoring namespace
- name: Create monitoring namespace
  community.kubernetes.k8s:
    name: monitoring
    api_version: v1
    kind: Namespace
    state: present
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/k3s.yaml"

# Copy monitoring values file
- name: Copy monitoring values file
  copy:
    src: monitoring-values.yaml
    dest: "/home/{{ ansible_user }}/monitoring-values.yaml"
    mode: '0644'

# Install kube-prometheus-stack
- name: Install kube-prometheus-stack
  community.kubernetes.helm:
    name: prometheus
    chart_ref: prometheus-community/kube-prometheus-stack
    release_namespace: monitoring
    values_files:
      - "/home/{{ ansible_user }}/monitoring-values.yaml"
    wait: true
    wait_timeout: 300s
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/k3s.yaml"

# Wait for pods to be ready
- name: Wait for monitoring pods to be ready
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: monitoring
    label_selectors:
      - app.kubernetes.io/instance=prometheus
  register: pods
  until: pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == pods.resources | length
  retries: 30
  delay: 10
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/k3s.yaml"

# Display access information
- name: Display monitoring access information
  debug:
    msg: |
      Monitoring stack has been installed successfully!

      Access URLs:
      - Prometheus: http://{{ ansible_host }}:30300
      - Grafana: http://{{ ansible_host }}:30301
        Username: admin
        Password: admin
      - AlertManager: http://{{ ansible_host }}:30302 