- name: Create Vault namespace
  command: kubectl create namespace vault
  register: namespace_result
  changed_when: namespace_result.rc == 0
  ignore_errors: true

- name: Add HashiCorp Helm repository
  command: helm repo add hashicorp https://helm.releases.hashicorp.com
  register: helm_repo_add
  changed_when: helm_repo_add.rc == 0

- name: Update Helm repositories
  command: helm repo update
  register: helm_update
  changed_when: helm_update.rc == 0

- name: Install Vault using Helm
  command: >
    helm upgrade --install vault hashicorp/vault 
    --namespace vault 
    --create-namespace 
    --set server.dev.enabled=true
    --set server.dev.devRootToken=root
    --set server.service.type=NodePort
    --set server.service.nodePort=30201
  register: vault_install
  changed_when: vault_install.rc == 0

- name: Wait for Vault pod to be ready
  command: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=vault -n vault --timeout=300s
  register: vault_ready
  changed_when: vault_ready.rc == 0

- name: Force Vault server to use subpath routing via container args
  command: >
    kubectl -n vault patch statefulset vault
    --type=json
    -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/args", "value": ["/usr/local/bin/docker-entrypoint.sh vault server -dev -ui"]}]'
  register: vault_force_args
  changed_when: vault_force_args.rc == 0

- name: Wait for Vault pod to be ready after configuration changes
  command: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=vault -n vault --timeout=300s
  register: vault_ready_after_config
  changed_when: vault_ready_after_config.rc == 0

- name: Get server public IP
  command: curl -s ifconfig.me
  register: public_ip
  changed_when: false
  ignore_errors: true

- name: Print Vault access instructions
  debug:
    msg: |
      ========================================
      VAULT SETUP COMPLETE
      ========================================
      
      ========================================
      ACCESS INFORMATION
      ========================================
      
      Vault UI: http://{{ public_ip.stdout | default(ansible_host) }}:30201
      
      Note: Vault is served via NodePort (port 30201) following HashiCorp's 
      recommendation to avoid subpath routing issues with ingress controllers.
      
      ========================================
      CREDENTIALS
      ========================================
      
      Root Token: root
      
      ========================================
      NEXT STEPS
      ========================================
      
      1. Access Vault UI: http://{{ public_ip.stdout | default(ansible_host) }}:30201
      2. Login with root token: root
      3. Configure authentication methods
      4. Create secrets and policies 