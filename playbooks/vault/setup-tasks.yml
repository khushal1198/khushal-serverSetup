- name: Create Vault namespace
  command: kubectl create namespace vault
  register: namespace_result
  changed_when: namespace_result.rc == 0
  ignore_errors: true

- name: Add HashiCorp Helm repository
  command: helm repo add hashicorp https://helm.releases.hashicorp.com
  register: helm_repo_add
  changed_when: helm_repo_add.rc == 0

- name: Update Helm repositories
  command: helm repo update
  register: helm_update
  changed_when: helm_update.rc == 0

- name: Install Vault using Helm
  command: >
    helm upgrade --install vault hashicorp/vault 
    --namespace vault 
    --create-namespace 
    --set server.dev.enabled=true
    --set server.dev.devRootToken=root
    --set server.service.type=NodePort
    --set server.service.nodePort=30201
  register: vault_install
  changed_when: vault_install.rc == 0

- name: Wait for Vault pod to be ready
  command: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=vault -n vault --timeout=300s
  register: vault_ready
  changed_when: vault_ready.rc == 0

- name: Create Vault ingress resource
  copy:
    dest: /tmp/vault-ingress.yaml
    content: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: vault-ingress
        namespace: vault
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /$2
          nginx.ingress.kubernetes.io/use-regex: "true"
      spec:
        ingressClassName: nginx
        rules:
        - http:
            paths:
            - path: /vault(/|$)(.*)
              pathType: ImplementationSpecific
              backend:
                service:
                  name: vault
                  port:
                    number: 8200

- name: Apply Vault ingress
  command: kubectl apply -f /tmp/vault-ingress.yaml
  register: vault_ingress_apply
  changed_when: vault_ingress_apply.rc == 0

- name: Get server public IP
  command: curl -s ifconfig.me
  register: public_ip
  changed_when: false
  ignore_errors: true

- name: Print Vault access instructions
  debug:
    msg: |
      ========================================
      VAULT SETUP COMPLETE
      ========================================
      
      ========================================
      ACCESS OPTIONS
      ========================================
      
      Option 1 - Direct NodePort (temporary):
      Vault UI: http://{{ public_ip.stdout | default(ansible_host) }}:30201
      
      Option 2 - Through Ingress (recommended):
      Vault UI: http://{{ public_ip.stdout | default(ansible_host) }}:30080/vault (or vault.local:30080)
      
      ========================================
      CREDENTIALS
      ========================================
      
      Root Token: root
      
      ========================================
      NEXT STEPS
      ========================================
      
      1. Access Vault UI and initialize if needed
      2. Configure authentication methods
      3. Create secrets and policies
      4. Access via Ingress Controller for better security
      5. No firewall rules needed - handled by Ingress 