- name: Create ArgoCD namespace
  command: kubectl create namespace argocd
  register: namespace_result
  changed_when: namespace_result.rc == 0
  ignore_errors: true

- name: Install ArgoCD using official manifests
  command: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  register: argocd_install
  changed_when: argocd_install.rc == 0

- name: Wait for ArgoCD server pod to be ready
  command: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server -n argocd --timeout=300s
  register: argocd_ready
  changed_when: argocd_ready.rc == 0

- name: Expose ArgoCD server via NodePort
  command: kubectl patch svc argocd-server -n argocd -p '{"spec":{"type":"NodePort"}}'
  register: argocd_patch
  changed_when: argocd_patch.rc == 0

- name: Create ArgoCD ingress resource
  copy:
    dest: /tmp/argocd-ingress.yaml
    content: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: argocd-ingress
        namespace: argocd
        annotations:
          nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      spec:
        ingressClassName: nginx
        rules:
        - host: argocd.local
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: argocd-server
                  port:
                    number: 443

- name: Apply ArgoCD ingress
  command: kubectl apply -f /tmp/argocd-ingress.yaml
  register: argocd_ingress_apply
  changed_when: argocd_ingress_apply.rc == 0

- name: Get ArgoCD NodePort
  command: kubectl get svc argocd-server -n argocd -o jsonpath='{.spec.ports[?(@.port==443)].nodePort}'
  register: argocd_nodeport
  changed_when: false

- name: Display ArgoCD access information
  debug:
    msg: |
      ArgoCD has been installed successfully!
      
      Access Information:
      - Namespace: argocd
      - NodePort: {{ argocd_nodeport.stdout }}
      - Ingress: http://{{ ansible_host }}:30080/argocd (or argocd.local:30080)
      
      To access ArgoCD UI:
      1. Get the admin password:
         kubectl -n argocd get secret argocd-secret -o jsonpath='{.data.admin\\.password}' | base64 -d; echo
      2. Open: https://{{ ansible_host }}:{{ argocd_nodeport.stdout }}
      3. Username: admin
      4. Password: (from step 1)
      
      Alternative - Port forward:
      kubectl port-forward svc/argocd-server -n argocd 8080:443
      Then open: https://localhost:8080
      
      See playbooks/argocd/README.md for detailed access instructions. 