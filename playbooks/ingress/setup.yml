---
- name: Setup Nginx Ingress Controller
  hosts: servers
  become: yes
  vars:
    ingress_namespace: "ingress-nginx"
    ingress_nodeport: 30080
    ingress_ssl_nodeport: 30443
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  tasks:
    - include_tasks: setup-tasks.yml

    - name: Create ingress-nginx namespace
      command: kubectl create namespace {{ ingress_namespace }}
      register: namespace_result
      changed_when: namespace_result.rc == 0
      ignore_errors: true

    - name: Add Nginx Ingress Helm repository
      command: helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      register: helm_repo_add
      changed_when: helm_repo_add.rc == 0

    - name: Update Helm repositories
      command: helm repo update
      register: helm_update
      changed_when: helm_update.rc == 0

    - name: Install Nginx Ingress Controller
      command: >
        helm install ingress-nginx ingress-nginx/ingress-nginx 
        --namespace {{ ingress_namespace }} 
        --create-namespace 
        --set controller.service.type=NodePort
        --set controller.service.nodePorts.http={{ ingress_nodeport }}
        --set controller.service.nodePorts.https={{ ingress_ssl_nodeport }}
        --set controller.config.use-proxy-protocol=false
        --set controller.config.use-forwarded-headers=true
        --set controller.config.proxy-real-ip-cidr=0.0.0.0/0
      register: ingress_install
      changed_when: ingress_install.rc == 0

    - name: Wait for Nginx Ingress Controller to be ready
      command: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=ingress-nginx -n {{ ingress_namespace }} --timeout=300s
      register: ingress_ready
      changed_when: ingress_ready.rc == 0

    - name: Allow Ingress ports through firewall
      ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
      register: firewall_result
      changed_when: firewall_result.changed
      loop:
        - "{{ ingress_nodeport }}"
        - "{{ ingress_ssl_nodeport }}"

    - name: Get server public IP
      command: curl -s ifconfig.me
      register: public_ip
      changed_when: false
      ignore_errors: true

    - name: Print Ingress access instructions
      debug:
        msg: |
          ========================================
          NGINX INGRESS CONTROLLER SETUP COMPLETE
          ========================================
          
          Ingress Controller is now running!
          
          HTTP Port: {{ ingress_nodeport }}
          HTTPS Port: {{ ingress_ssl_nodeport }}
          
          Server IP: {{ public_ip.stdout | default(ansible_host) }}
          
          ========================================
          NEXT STEPS
          ========================================
          
          1. Create Ingress resources for your services
          2. Access services via HTTP/HTTPS on standard ports
          3. No more NodePort issues!
          
          Firewall rules for ports {{ ingress_nodeport }} and {{ ingress_ssl_nodeport }} have been added. 