- name: Create PostgreSQL namespace
  command: kubectl create namespace postgres
  register: namespace_result
  changed_when: namespace_result.rc == 0
  ignore_errors: true

- name: Add Bitnami Helm repository
  command: helm repo add bitnami https://charts.bitnami.com/bitnami
  register: helm_repo_add
  changed_when: helm_repo_add.rc == 0

- name: Update Helm repositories
  command: helm repo update
  register: helm_update
  changed_when: helm_update.rc == 0

- name: Install PostgreSQL using Helm
  command: >
    helm upgrade --install postgresql bitnami/postgresql 
    --namespace postgres 
    --create-namespace 
    --set auth.postgresPassword={{ postgres_password }}
    --set auth.database={{ postgres_database }}
    --set primary.service.type=NodePort
    --set primary.service.nodePorts.postgresql={{ postgres_nodeport }}
    --set primary.persistence.enabled=true
    --set primary.persistence.size={{ postgres_storage_size }}
    --set metrics.enabled=true
    --set metrics.serviceMonitor.enabled=true
  register: postgresql_install
  changed_when: postgresql_install.rc == 0
  vars:
    postgres_password: "admin123"
    postgres_database: "myapp"
    postgres_nodeport: 32543
    postgres_storage_size: "8Gi"

- name: Create pgAdmin deployment
  copy:
    dest: /tmp/pgadmin-deployment.yaml
    content: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: pgadmin4
        namespace: postgres
        labels:
          app: pgadmin4
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: pgadmin4
        template:
          metadata:
            labels:
              app: pgadmin4
          spec:
            containers:
            - name: pgadmin4
              image: dpage/pgadmin4:latest
              ports:
              - containerPort: 80
              env:
              - name: PGADMIN_DEFAULT_EMAIL
                value: "{{ pgadmin_email }}"
              - name: PGADMIN_DEFAULT_PASSWORD
                value: "{{ pgadmin_password }}"
              - name: PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION
                value: "True"
              - name: PGADMIN_CONFIG_LOGIN_BANNER
                value: "\"Authorised users only!\""
              - name: PGADMIN_CONFIG_CONSOLE_LOG_LEVEL
                value: "10"
              - name: PGADMIN_SERVER_JSON_FILE
                value: "/pgadmin4/servers.json"
              volumeMounts:
              - name: pgadmin-storage
                mountPath: /var/lib/pgadmin
              - name: servers-config
                mountPath: /pgadmin4/servers.json
                subPath: servers.json
            volumes:
            - name: pgadmin-storage
              persistentVolumeClaim:
                claimName: pgadmin-pvc
            - name: servers-config
              configMap:
                name: pgadmin-servers
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: pgadmin-servers
        namespace: postgres
      data:
        servers.json: |
          {
            "Servers": {
              "1": {
                "Name": "PostgreSQL Server",
                "Group": "Servers",
                "Host": "postgresql",
                "Port": 5432,
                "MaintenanceDB": "postgres",
                "Username": "postgres",
                "SSLMode": "prefer",
                "Comment": "Auto-configured PostgreSQL server"
              }
            }
          }
      ---
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pgadmin-pvc
        namespace: postgres
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ pgadmin_storage_size }}
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: pgadmin4
        namespace: postgres
        labels:
          app: pgadmin4
      spec:
        type: NodePort
        ports:
        - port: 80
          targetPort: 80
          nodePort: {{ pgadmin_nodeport }}
        selector:
          app: pgadmin4
  vars:
    pgadmin_email: "admin@admin.com"
    pgadmin_password: "admin123"
    pgadmin_nodeport: 32544
    pgadmin_storage_size: "2Gi"

- name: Apply pgAdmin deployment
  command: kubectl apply -f /tmp/pgadmin-deployment.yaml
  register: pgadmin_deploy_apply
  changed_when: pgadmin_deploy_apply.rc == 0

- name: Wait for PostgreSQL pod to be ready
  command: kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=postgresql -n postgres --timeout=300s
  register: postgresql_ready
  changed_when: postgresql_ready.rc == 0

- name: Wait for pgAdmin pod to be ready
  command: kubectl wait --for=condition=ready pod -l app=pgadmin4 -n postgres --timeout=300s
  register: pgadmin_ready
  changed_when: pgadmin_ready.rc == 0

- name: Get PostgreSQL connection details
  shell: kubectl get secret postgresql -n postgres -o jsonpath='{.data.postgres-password}' | base64 --decode
  register: postgres_decoded_password
  changed_when: false

- name: Get server public IP
  command: curl -s ifconfig.me
  register: public_ip
  changed_when: false
  ignore_errors: true

- name: Print PostgreSQL and pgAdmin access instructions
  debug:
    msg: |
      ========================================
      POSTGRESQL & PGADMIN SETUP COMPLETE
      ========================================
      
      ========================================
      ACCESS OPTIONS
      ========================================
      
      pgAdmin Web Interface:
      - Primary Access: http://{{ public_ip.stdout | default(ansible_host) }}:{{ pgadmin_nodeport }}
      - From any device: http://104.241.54.17:{{ pgadmin_nodeport }}
      
      PostgreSQL Database:
      - Host: {{ public_ip.stdout | default(ansible_host) }}
      - Port: {{ postgres_nodeport }}
      - Database: {{ postgres_database }}
      
      Internal Kubernetes Access:
      - Service: postgresql.postgres.svc.cluster.local
      - Port: 5432
      
      ========================================
      CREDENTIALS
      ========================================
      
      pgAdmin:
      - Email: {{ pgadmin_email }}
      - Password: {{ pgadmin_password }}
      
      PostgreSQL:
      - Username: postgres
      - Password: {{ postgres_password }}
      - Database: {{ postgres_database }}
      
      ========================================
      AUTO-CONFIGURATION
      ========================================
      
      ✅ PostgreSQL server is automatically registered in pgAdmin!
      - Server Name: "PostgreSQL Server"
      - Connection: Pre-configured to connect to PostgreSQL
      - Just login to pgAdmin and click on the server
      
      ========================================
      CONNECTION EXAMPLES
      ========================================
      
      psql command:
      psql -h {{ public_ip.stdout | default(ansible_host) }} -p {{ postgres_nodeport }} -U postgres -d {{ postgres_database }}
      
      Connection string:
      postgresql://postgres:{{ postgres_password }}@{{ public_ip.stdout | default(ansible_host) }}:{{ postgres_nodeport }}/{{ postgres_database }}
      
      ========================================
      MULTI-DEVICE ACCESS
      ========================================
      
      Access from any device on any network:
      • pgAdmin: http://104.241.54.17:{{ pgadmin_nodeport }}
      • No /etc/hosts setup required!
      • Works on phones, tablets, other computers
      
      ========================================
      NEXT STEPS
      ========================================
      
      1. Access pgAdmin on port {{ pgadmin_nodeport }} for database management
      2. PostgreSQL server is already configured - just click to connect!
      3. Create additional databases and users as needed
      4. Configure backup strategies
      5. Set up monitoring (metrics are enabled)
      6. For production: change default passwords!
  vars:
    postgres_password: "admin123"
    postgres_database: "myapp"
    postgres_nodeport: 32543
    pgadmin_email: "admin@admin.com"
    pgadmin_password: "admin123"
    pgadmin_nodeport: 32544 